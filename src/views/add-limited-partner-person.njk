{% extends "layout.njk" %}

{% set pageTitle = i18n.addPartnerPersonPage.limitedPartner.title %}
{% set publicRegisterInformationLine1 = i18n.addPartnerPersonPage.publicRegisterLine1 %}
{% set publicRegisterInformationLine2 = i18n.addPartnerPersonPage.publicRegisterLine2 %}

{% if props.data.limitedPartner.data.date_of_birth  %}
  {# This is for when saved data is pre-populated on the page #}
  {% set date_of_birth = props.data.limitedPartner.data.date_of_birth %}
  {% set year = date_of_birth[0] + date_of_birth[1] + date_of_birth[2] + date_of_birth[3] %}
  {% set month = date_of_birth[5] + date_of_birth[6] %}
  {% set day = date_of_birth[8] + date_of_birth[9] %}
{% else %}
  {# And this covers the scenario when date validation fails and the page reloads #}
  {% set year = props.data.limitedPartner.data["date_of_birth-year"] %}
  {% set month = props.data.limitedPartner.data["date_of_birth-month"] %}
  {% set day = props.data.limitedPartner.data["date_of_birth-day"] %}
{% endif %}

{% if props.data.limitedPartner.data.former_names %}
  {% set previousNames = "true" %}
{% elseif props.data.limitedPartner.data.forename %}
  {# After the first check, if any other limited partner person field is set, they cannot have a previous name #}
  {% set previousNames = "false" %}
{% endif %}

{% block content %}
  <div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">

      <form class="form" action={{ props.currentUrl }} method="post">
        <input type="hidden" name="pageType" value={{ props.pageType }}>      
        {% include "includes/csrf_token.njk" %}

        {% include "includes/errors.njk" %}
        
        {% include "includes/proposed-name.njk" %}  
    
        <h1 class="govuk-heading-xl">{{ i18n.addPartnerPersonPage.limitedPartner.title }}</h1>

        {{ govukInput({
          label: {
            text: i18n.addPartnerPersonPage.firstName,
            classes: "govuk-label govuk-label--m",
            isPageHeading: false
          },
          id: "forename",
          name: "forename",
          value: props.data.limitedPartner.data.forename,
          classes: "govuk-!-width-full",
          errorMessage: props.errors.forename if props.errors,
          attributes : {
            required: true,
            minlength: 1,
            maxlength: 50
          }
        }) }}

        {{ govukInput({
          label: {
            text: i18n.addPartnerPersonPage.lastName,
            classes: "govuk-label govuk-label--m",
            isPageHeading: false
          },
          id: "surname",
          name: "surname",
          value: props.data.limitedPartner.data.surname,
          classes: "govuk-!-width-full",
          errorMessage: props.errors.surname if props.errors,
          attributes : {
            required : true,
            minlength: 1,
            maxlength: 160
          }
        }) }}

        {% set previousHtmlPerson %}
          {{ govukInput({
            label: {
              text: i18n.addPartnerPersonPage.limitedPartner.previousName.yesHintTitle
            },
            hint: {
              text: i18n.addPartnerPersonPage.limitedPartner.previousName.yesHint
            },
            id: "former_names",
            name: "former_names",
            value: props.data.limitedPartner.data.former_names,
            errorMessage: props.errors.former_names if props.errors,
            attributes: {
              maxlength: 160
            }
          }) }}
        {% endset -%}

        {{ govukRadios({
          classes: "govuk-radios",
          name: "previousName",
          value: previousNames,
          fieldset: {
            legend: {
              text: i18n.addPartnerPersonPage.limitedPartner.previousName.title,
              isPageHeading: true,
              classes: "govuk-label govuk-label--m"
            }
          },
          hint: {
            text: i18n.addPartnerPersonPage.limitedPartner.previousName.hint
          },

          items: [
            {
              value: "true",
              text: i18n.addPartnerPersonPage.limitedPartner.previousName.yes,
              id: "previousNameYes",
              name: "previousNameYes",
              attributes: {
                required: true,
                "role": "radiogroup"
              },
              conditional: {
                html: previousHtmlPerson
              }
            },
            {
              value: "false",
              text: i18n.addPartnerPersonPage.limitedPartner.previousName.no,
              id: "previousNameNo",
              name: "previousNameNo",
              attributes: {
                required: true
              }
            }
          ]
        }) }}

        {{ govukDateInput({
          id: "date_of_birth",
          namePrefix: "date_of_birth",
          errorMessage: props.errors.date_of_birth if props.errors,
          fieldset: {
            legend: {
              text: i18n.addPartnerPersonPage.dateOfBirth,
              isPageHeading: true,
              classes: "govuk-label govuk-label--m"
            }
          },
          hint: {
            text: i18n.addPartnerPersonPage.dateOfBirthHint
          },
          items: [
            {
              classes: "govuk-input--width-2",
              name: "day",
              value: day,
              attributes: {
                required: true,
                minlength: 1,
                maxlength: 2,
                pattern: "[0-9]*"
              }
            },
            {
              classes: "govuk-input--width-2",
              name: "month",
              value: month,
              attributes: {
                required: true,
                minlength: 1,
                maxlength: 2,
                pattern: "[0-9]*"
              }
            },
            {
              classes: "govuk-input--width-4",
              name: "year",
              value: year,
              attributes: {
                required: true,
                minlength: 4,
                maxlength: 4,
                pattern: "[0-9]*"
              }
            }
          ]
        }) }}

        {% set nationalityField = props.data.limitedPartner.data.nationality1 %}
        {% set nationalityFieldSelectPrompt = i18n.addPartnerPersonPage.nationalitySelectPrompt %}
        {% set nationalityFieldRequired = "true" %}
        {% set nationalityFieldText = i18n.addPartnerPersonPage.nationality %}
        {% set nationalityFieldHintText = "" %}
        {% set nationalityFieldNameId = "nationality1" %}
        {% include "includes/nationalities.njk" %}

        {% set nationalityField = props.data.limitedPartner.data.nationality2 %}
        {% set nationalityFieldSelectPrompt = i18n.addPartnerPersonPage.secondNationalitySelectPrompt %}
        {% set nationalityFieldRequired = "false" %}
        {% set nationalityFieldText = i18n.addPartnerPersonPage.secondNationality %}
        {% set nationalityFieldHintText = i18n.addPartnerPersonPage.secondNationalityHint  %}
        {% set nationalityFieldNameId = "nationality2" %}
        {% include "includes/nationalities.njk" %}

        <div>
          {% include "includes/public-register-information.njk" %}
        </div>

        {% include "includes/save-and-continue-button.njk" %}
      </form>

    </div>
  </div>

  {% include "includes/validators.njk" %}

{% endblock %}