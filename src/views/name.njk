{% extends "layout.njk" %}

{% block content %}

{% set nameEnding = i18n.namePage.nameEnding %}
{% set nameEndingHint = i18n.namePage.nameEndingHint %}

<div class="govuk-grid-row">
  <div class="govuk-grid-column-two-thirds">
    <form class="form" action={{ props.currentUrl }} method="post">
      <input type="hidden" name="pageType" value={{ props.pageType }}>
      
      {% include "includes/csrf_token.njk" %}

      <h1 class="govuk-heading-xl">{{ i18n.namePage.title }}</h1>

      <div class="govuk-form-group">
        <h1 class="govuk-label-wrapper">
          <label class="govuk-label govuk-label--l" for="partnership_name">
            {{ i18n.namePage.whatIsName }}
          </label>
        </h1>

        {{ govukInput ({
          classes: "govuk-input--width-40",
          errorMessage: errors.partnership_name if errors,
          id: "partnership_name",
          name: "partnership_name",
          value: partnership_name,
          fieldset: {
            legend: {
              isPageHeading: false,
              classes: "govuk-fieldset__legend--xl"
            }
          },
          hint: {
            text: i18n.namePage.whatIsNameHint
          },
          attributes : {
            required : true,
            "aria-describedby": "partnership_name-hint",
            minLength: "3"
          },
          suffix: {
            text: "Limited Partnership"
          }
        }) }}

      </div>

      {{ govukInsetText({
        html: '<p>' + i18n.namePage.existingPartnershipHint + '</p><p>' + i18n.namePage.sensitiveWordHint + '</p><p>' + i18n.namePage.existingTrademarkHint + '</p>'
      }) }}

      {% include "includes/name-ending.njk" %}
    </form>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const suffixDiv = document.querySelector('.govuk-input__suffix');
    const radioButtons = document.querySelectorAll('input[name="name_ending"]');

    radioButtons.forEach(function(radioButton) {
      radioButton.addEventListener('change', function() {
        if (radioButton.checked) {
          suffixDiv.textContent = radioButton.value;
        }
      });
    });

    const form = document.querySelector('.form');

    form.addEventListener('submit', function(evt) {
      if (!suffixDiv.textContent) {
        evt.preventDefault();
      }
    });

    const params = new URLSearchParams(document.location.search);
    const whichType = params.get("which-type");
  });
</script>

{% endblock %}
