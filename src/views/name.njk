{% extends "layout.njk" %}

{% block content %}


<div class="govuk-grid-row">
  <div class="govuk-grid-column-two-thirds">
    <form class="form" action={{ props.currentUrl }} method="post">
      <input type="hidden" name="pageType" value={{ props.pageType }}>
      
      {% include "includes/csrf_token.njk" %}

      <h1 class="govuk-heading-xl">{{ i18n.namePage.title }}</h1>

      <div class="govuk-form-group">
        <h1 class="govuk-label-wrapper">
          <label class="govuk-label govuk-label--l" for="partnership_name">
            {{ i18n.namePage.whatIsName }}
          </label>
        </h1>

        {{ govukInput ({
          classes: "govuk-input--width-40",
          errorMessage: errors.partnership_name if errors,
          id: "partnership_name",
          name: "partnership_name",
          value: partnership_name,
          fieldset: {
            legend: {
              isPageHeading: false,
              classes: "govuk-fieldset__legend--xl"
            }
          },
          hint: {
            text: i18n.namePage.whatIsNameHint
          },
          attributes : {
            required : true,
            "aria-describedby": "partnership_name-hint",
            minLength: "1"
          },
          pattern : "^(?! ).*(?<! )$",
          suffix: {
            text: "Limited Partnership"
          }
        }) }}

      </div>

      <details class="govuk-details">
        <summary class="govuk-details__summary">
          <span class="govuk-details__summary-text">
            {{ i18n.namePage.checkName }}
          </span>
        </summary>
        <div class="govuk-details__text">
          <p>
            {{ i18n.namePage.checkNameExistingLP | safe }}
          </p>
          <p>
            {{ i18n.namePage.checkNameExistingTrademark | safe }}
          </p>
        </div>
      </details>

      <div class="govuk-form-group">
        <fieldset class="govuk-fieldset" aria-describedby="nameEnding-hint">
          <legend class="govuk-fieldset__legend govuk-fieldset__legend--l">
            <h1 class="govuk-fieldset__heading">
              {{ i18n.namePage.nameEnding }}
            </h1>
          </legend>

          {% set welsh %}
            {{ govukRadios({
              errorMessage: errors.name_ending if errors,
              classes: "govuk-radios",
              idPrefix: "name_ending",
              name: "name_ending",
              items: [
                {
                  value: "Partneriaeth Cyfyngedig",
                  text: "Partneriaeth Cyfyngedig",
                  id: "nameEnding-1",
                  name: "name_ending",
                  attributes: {
                    required: true
                  }
                },
                {
                  value: "PC",
                  text: "PC",
                  id: "nameEnding-2",
                  name: "name_ending",
                  attributes: {
                    required: true
                  }
                },
                {
                  value: "P.C.",
                  text: "P.C.",
                  id: "nameEnding-3",
                  name: "name_ending",
                  attributes: {
                    required: true
                  }
                }
              ]
            }) }}
          {% endset -%}

          {{ govukRadios({
            errorMessage: errors.name_ending if errors,
            classes: "govuk-radios",
            idPrefix: "name_ending",
            name: "name_ending",
            fieldset: {
              legend: {
                isPageHeading: false,
                classes: "govuk-fieldset__legend--xl"
              }
            },
            hint: {
              text: i18n.namePage.nameEndingHint
            },
            items: [
              {
                value: "Limited Partnership",
                text: "Limited Partnership",
                id: "nameEnding-1",
                name: "name_ending",
                attributes: {
                  required: true
                }
              },
              {
                value: "LP",
                text: "LP",
                id: "nameEnding-2",
                name: "name_ending",
                attributes: {
                  required: true
                }
              },
              {
                value: "L.P.",
                text: "L.P.",
                id: "nameEnding-3",
                name: "name_ending",
                attributes: {
                  required: true
                }
              },
              {
                value: "",
                text: "A Welsh name ending",
                id: "nameEnding-4",
                name: "name_ending",
                conditional: {
                  html: welsh
                }
              }
            ]
          }) }}
          
        </fieldset>
      </div>

      {% include "includes/save-and-continue-button.njk" %}
    </form>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    function validateNameLength() {
      const name = nameField.value + " " + suffixDiv.textContent;
      const maxLength = 160;
      if (name.length > maxLength){
        nameField.setCustomValidity(`Max length including suffix is ${maxLength} characters`);
      } else {
        nameField.setCustomValidity('');
      }
      nameField.reportValidity();
    };

    const suffixDiv = document.querySelector('.govuk-input__suffix');
    const radioButtons = document.querySelectorAll('input[name="name_ending"]');

    radioButtons.forEach(function(radioButton) {
      radioButton.addEventListener('change', function() {
        if (radioButton.checked) {
          suffixDiv.textContent = radioButton.value;
          validateNameLength();
        }
      });
    });

    const nameField = document.getElementById('partnership_name');
    nameField.addEventListener('keyup', validateNameLength);

    const form = document.querySelector('.form');

    form.addEventListener('submit', function(evt) {
      if (!suffixDiv.textContent) {
        evt.preventDefault();
      }
    });

    const params = new URLSearchParams(document.location.search);
    const whichType = params.get("which-type");
  });
</script>

{% endblock %}
