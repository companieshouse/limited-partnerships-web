{% import 'includes/macros.njk' as macros %}

{% set validatePremises = "validateInput(this, 200, '" + i18n.address.enterAddress.errorMessages.premisesMissing | escape + "', '" + i18n.address.enterAddress.errorMessages.premisesLength | escape + "');" %}
{% set validateAddressLine1 = "validateInput(this, 50, '" + i18n.address.enterAddress.errorMessages.addressLine1Missing | escape + "', '" + i18n.address.enterAddress.errorMessages.addressLine1Length | escape + "');" %}
{% set validateLocality = "validateInput(this, 50, '" + i18n.address.enterAddress.errorMessages.localityMissing | escape + "', '" + i18n.address.enterAddress.errorMessages.localityLength | escape + "');" %}

{% include "includes/validators.njk" %}

<div>
    {{ govukInput({
        errorMessage: props.errors.premises if props.errors,
        label: {
            text: i18n.address.enterAddress.premises,
            classes: "govuk-!-margin-top-5"
        },
        hint: {
            text: i18n.address.enterAddress.premisesHint
        },
        id: "premises",
        name: "premises",
        value: address.premises,
        attributes : {  
            required : true,
            oninvalid: validatePremises,
            oninput: validatePremises
        }
    }) }}

    {{ govukInput({
        errorMessage: props.errors.address_line_1 if props.errors,
        label: {
            text: i18n.address.enterAddress.addressLine1
        },
        id: "address_line_1",
        name: "address_line_1",
        value: address.address_line_1,
        attributes : {
            required : true,
            oninvalid: validateAddressLine1,
            oninput: validateAddressLine1
        }
    }) }}

    {{ govukInput({
        errorMessage: props.errors.address_line_2 if props.errors,
        label: {
            text: i18n.address.enterAddress.addressLine2
        },
        id: "address_line_2",
        name: "address_line_2",
        value: address.address_line_2,
        attributes : {  
            oninput: "validateLength(this, 50, '" + i18n.address.enterAddress.errorMessages.addressLine2Length | escape + "');"            
        }
    }) }}

    {{ govukInput({
        errorMessage: props.errors.locality if props.errors,
        label: {
            text: i18n.address.enterAddress.locality
        },
        classes: "govuk-!-width-two-thirds",
        id: "locality",
        name: "locality",
        value: address.locality,
        attributes : {
            required : true,
            oninvalid: validateLocality,
            oninput: validateLocality
        }
    }) }}

    {{ govukInput({
        errorMessage: props.errors.region if props.errors,
        label: {
            text: i18n.address.enterAddress.region
        },
        classes: "govuk-!-width-two-thirds",
        id: "region",
        name: "region",
        value: address.region,
        attributes : {
            oninput: "validateLength(this, 50, '" + i18n.address.enterAddress.errorMessages.regionLength | escape + "');"
        }
    }) }}
</div>


