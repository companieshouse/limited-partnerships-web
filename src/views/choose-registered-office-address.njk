{% extends "layout.njk" %}

{% import 'includes/macros.njk' as macros %}

{% set pageTitle = i18n.chooseRegisteredOfficeAddressPage.title %}

{% set addressItems = [] %}
{% for address in props.data.addressList %}
  {% set newItem = {
    value: address | dump,
    text: macros.formatAddress(address),
    attributes: {
      required: true,
      "radio-event-id": "address-radio-selected"
    }
  } %}
  {% set addressItems = addressItems.concat([newItem]) %}
{% endfor %}

{% block content %}
  <div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
      <form class="form" action={{ props.currentUrl }} method="post">
        <input type="hidden" name="pageType" value={{ props.pageType }}>
        {% include "includes/csrf_token.njk" %}
        
        {% include "includes/proposed-name.njk" %}  

        {{ govukRadios({
          classes: "govuk-radios",
          name: "selected_address",
          value: props.data.cache['registration_choose-registered-office-address'] | dump,
          fieldset: {
            legend: {
              text: i18n.chooseRegisteredOfficeAddressPage.title,
              isPageHeading: true,
              classes: "govuk-fieldset__legend--xl"
            }
          },
          items: addressItems
        }) }}
       
        <p>
          <a href="{{ props.currentUrl | replace(props.pageType, props.data.enterManualAddressPageType) }}" class="govuk-body-m govuk-link" data-event-id="address-not-on-list">{{ i18n.chooseRegisteredOfficeAddressPage.addressLink }}</a>
        <p>
       
       {{ govukButton({
          text: i18n.buttons.continue,
          attributes: {
            "id": "submit",
            "onclick": "_paq.push(['trackEvent', 'Limited Partnerships', '" + props.pageType + "', document.querySelector('input[name=selected_address]:checked').getAttribute('radio-event-id')])"
          }
        }) }}
      </form>
    </div>
  </div>
{% endblock %}

       
      